{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/book.service\";\nimport * as i3 from \"src/app/services/user.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"ngx-toastr\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@ng-bootstrap/ng-bootstrap\";\nfunction AddBookComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 17);\n    i0.ɵɵtext(1, \"Model Field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddBookComponent {\n  constructor(formBuilder, bookService, userService, route, toastr) {\n    this.formBuilder = formBuilder;\n    this.bookService = bookService;\n    this.userService = userService;\n    this.route = route;\n    this.toastr = toastr;\n    this.addBookForm = this.formBuilder.group({\n      bookName: [\"\", Validators.required],\n      author: [\"\", Validators.required],\n      description: [\"\", Validators.required],\n      genre: [\"\", Validators.required],\n      rating: [\"\", Validators.required]\n    });\n  }\n  onAdd() {\n    const lentByUserId = this.userService.getUserIdFromToken();\n    const bookDetails = {\n      ...this.addBookForm.value,\n      lentByUserId\n    };\n    console.log(bookDetails);\n    this.bookService.addBook(bookDetails).subscribe(res => {\n      console.log(res);\n      this.toastr.success(\"Book Added Successfully\");\n      this.route.navigateByUrl(\"/dashboard\");\n    }, error => {\n      console.log(error);\n      this.toastr.error(\"Something went wrong\");\n    });\n  }\n  static #_ = this.ɵfac = function AddBookComponent_Factory(t) {\n    return new (t || AddBookComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.BookService), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.ToastrService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddBookComponent,\n    selectors: [[\"app-add-book\"]],\n    decls: 28,\n    vars: 3,\n    consts: [[1, \"base\"], [1, \"add-book\"], [1, \"text-center\"], [3, \"formGroup\", \"submit\"], [1, \"mb-3\"], [\"for\", \"bookName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"bookName\", \"placeholder\", \"Enter Book Name\", \"aria-describedby\", \"bookNameHelp\", \"formControlName\", \"bookName\", 1, \"form-control\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [\"for\", \"author\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"author\", \"placeholder\", \"Enter Book Author\", \"aria-describedby\", \"authorHelp\", \"formControlName\", \"author\", 1, \"form-control\"], [\"for\", \"genre\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"genre\", \"placeholder\", \"Enter Book Genre\", \"aria-describedby\", \"genreHelp\", \"formControlName\", \"genre\", 1, \"form-control\"], [\"for\", \"description\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"description\", \"placeholder\", \"Enter Book Description\", \"aria-describedby\", \"descriptionHelp\", \"formControlName\", \"description\", 1, \"form-control\"], [\"for\", \"rating\", 1, \"form-label\"], [\"formControlName\", \"rating\", \"id\", \"custom-rating\", 1, \"form-control\", 3, \"max\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [2, \"color\", \"red\"]],\n    template: function AddBookComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n        i0.ɵɵtext(3, \"Add New Book\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 3);\n        i0.ɵɵlistener(\"submit\", function AddBookComponent_Template_form_submit_4_listener() {\n          return ctx.onAdd();\n        });\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Book Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵtemplate(9, AddBookComponent_span_9_Template, 2, 0, \"span\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 8);\n        i0.ɵɵtext(12, \"Book Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 4)(15, \"label\", 10);\n        i0.ɵɵtext(16, \"Book Genre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 4)(19, \"label\", 12);\n        i0.ɵɵtext(20, \"Book Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 4)(23, \"label\", 14);\n        i0.ɵɵtext(24, \"Rate the Book\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"ngb-rating\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 16);\n        i0.ɵɵtext(27, \"Submit\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.addBookForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.addBookForm.controls[\"\"].dirty && ctx.carForm.hasError(\"required\", \"model\"));\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"max\", 5);\n      }\n    },\n    dependencies: [i6.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i7.NgbRating],\n    styles: [\".base[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: center; \\r\\n    align-items: center; \\r\\n    height: 100vh; \\r\\n  }\\r\\n  .form-label[_ngcontent-%COMP%]{\\r\\n    color: rgba(247, 255, 240, 0.862);\\r\\n  }\\r\\n\\r\\n  #custom-rating[_ngcontent-%COMP%] {\\r\\n    font-size: 24px;\\r\\n    color: #FFD700; \\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtYm9vay9hZGQtYm9vay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QixFQUFFLGtDQUFrQztJQUMzRCxtQkFBbUIsRUFBRSxnQ0FBZ0M7SUFDckQsYUFBYSxFQUFFLGtFQUFrRTtFQUNuRjtFQUNBO0lBQ0UsaUNBQWlDO0VBQ25DOztFQUVBO0lBQ0UsZUFBZTtJQUNmLGNBQWM7RUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyIuYmFzZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IC8qIENlbnRlciB0aGUgY2hpbGQgaG9yaXpvbnRhbGx5ICovXHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyAvKiBDZW50ZXIgdGhlIGNoaWxkIHZlcnRpY2FsbHkgKi9cclxuICAgIGhlaWdodDogMTAwdmg7IC8qIE9wdGlvbmFsOiBNYWtlIHRoZSBjb250YWluZXIgdGFrZSB1cCB0aGUgZnVsbCB2aWV3cG9ydCBoZWlnaHQgKi9cclxuICB9XHJcbiAgLmZvcm0tbGFiZWx7XHJcbiAgICBjb2xvcjogcmdiYSgyNDcsIDI1NSwgMjQwLCAwLjg2Mik7XHJcbiAgfVxyXG5cclxuICAjY3VzdG9tLXJhdGluZyB7XHJcbiAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICBjb2xvcjogI0ZGRDcwMDsgXHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;;;;ICarDC,gCAAyG;IAAAA,uCAAuB;IAAAA,iBAAO;;;ADFrJ,OAAM,MAAOC,gBAAgB;EAE3BC,YAAoBC,WAAuB,EAASC,WAAuB,EAASC,WAAuB,EAASC,KAAY,EAASC,MAAqB;IAA1I,gBAAW,GAAXJ,WAAW;IAAqB,gBAAW,GAAXC,WAAW;IAAqB,gBAAW,GAAXC,WAAW;IAAqB,UAAK,GAALC,KAAK;IAAgB,WAAM,GAANC,MAAM;IAC7I,IAAI,CAACC,WAAW,GAAC,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACtCC,QAAQ,EAAC,CAAC,EAAE,EAACX,UAAU,CAACY,QAAQ,CAAC;MACjCC,MAAM,EAAC,CAAC,EAAE,EAACb,UAAU,CAACY,QAAQ,CAAC;MAC/BE,WAAW,EAAC,CAAC,EAAE,EAACd,UAAU,CAACY,QAAQ,CAAC;MACpCG,KAAK,EAAC,CAAC,EAAE,EAACf,UAAU,CAACY,QAAQ,CAAC;MAC9BI,MAAM,EAAC,CAAC,EAAE,EAAChB,UAAU,CAACY,QAAQ;KAC/B,CAAC;EACJ;EACAK,KAAK;IACH,MAAMC,YAAY,GAAC,IAAI,CAACZ,WAAW,CAACa,kBAAkB,EAAE;IACxD,MAAMC,WAAW,GAAC;MAAC,GAAG,IAAI,CAACX,WAAW,CAACY,KAAK;MAACH;IAAY,CAAC;IAC1DI,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;IACxB,IAAI,CAACf,WAAW,CAACmB,OAAO,CAACJ,WAAW,CAAC,CAACK,SAAS,CAAEC,GAAG,IAAG;MACrDJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;MAChB,IAAI,CAAClB,MAAM,CAACmB,OAAO,CAAC,yBAAyB,CAAC;MAC9C,IAAI,CAACpB,KAAK,CAACqB,aAAa,CAAC,YAAY,CAAC;IACxC,CAAC,EACAC,KAAK,IAAG;MACPP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;MAClB,IAAI,CAACrB,MAAM,CAACqB,KAAK,CAAC,sBAAsB,CAAC;IAC3C,CAAC,CAAC;EACJ;EAAC;qBAxBU3B,gBAAgB;EAAA;EAAA;UAAhBA,gBAAgB;IAAA4B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCZ7BjC,8BAAkB;QAEYA,4BAAY;QAAAA,iBAAK;QACzCA,+BAAmD;QAAnBA;UAAA,OAAUkC,WAAO;QAAA,EAAC;QAC9ClC,8BAAkB;QAC2BA,yBAAS;QAAAA,iBAAQ;QAC1DA,2BAOE;QACFA,mEAAuI;QAC3IA,iBAAM;QAENA,+BAAkB;QACyBA,4BAAW;QAAAA,iBAAQ;QAC1DA,4BAOE;QACNA,iBAAM;QACNA,+BAAkB;QACwBA,2BAAU;QAAAA,iBAAQ;QACxDA,6BAOE;QACNA,iBAAM;QACNA,+BAAkB;QAC8BA,iCAAgB;QAAAA,iBAAQ;QACpEA,6BAOE;QACNA,iBAAM;QACNA,+BAAkB;QACuBA,8BAAa;QAAAA,iBAAQ;QAE5DA,kCAAoG;QACxGA,iBAAM;QACJA,mCAA8C;QAAAA,uBAAM;QAAAA,iBAAS;;;QApD3DA,eAAyB;QAAzBA,2CAAyB;QAWhBA,eAA4E;QAA5EA,sGAA4E;QAuChDA,gBAAS;QAATA,uBAAS","names":["Validators","i0","AddBookComponent","constructor","formBuilder","bookService","userService","route","toastr","addBookForm","group","bookName","required","author","description","genre","rating","onAdd","lentByUserId","getUserIdFromToken","bookDetails","value","console","log","addBook","subscribe","res","success","navigateByUrl","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Dotnet-Mini-Assignment2\\BookBorrowFrontend\\librarysystem\\src\\app\\components\\add-book\\add-book.component.ts","C:\\Users\\ayushpal\\Dotnet-Mini-Assignment2\\BookBorrowFrontend\\librarysystem\\src\\app\\components\\add-book\\add-book.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BookService } from 'src/app/services/book.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { NgbRatingModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-add-book',\n  templateUrl: './add-book.component.html',\n  styleUrls: ['./add-book.component.css']\n})\nexport class AddBookComponent {\n  addBookForm:FormGroup\n  constructor(private formBuilder:FormBuilder,private bookService:BookService,private userService:UserService,private route:Router,private toastr: ToastrService){\n    this.addBookForm=this.formBuilder.group({\n      bookName:[\"\",Validators.required],\n      author:[\"\",Validators.required],\n      description:[\"\",Validators.required],\n      genre:[\"\",Validators.required],\n      rating:[\"\",Validators.required]\n    })\n  }\n  onAdd(){\n    const lentByUserId=this.userService.getUserIdFromToken();\n    const bookDetails={...this.addBookForm.value,lentByUserId};\n    console.log(bookDetails);\n    this.bookService.addBook(bookDetails).subscribe((res)=>{\n      console.log(res);\n      this.toastr.success(\"Book Added Successfully\");\n      this.route.navigateByUrl(\"/dashboard\");\n    },\n    (error)=>{\n      console.log(error);\n      this.toastr.error(\"Something went wrong\");\n    })\n  }\n}\n","<div class=\"base\">\n  <div class=\"add-book\">\n      <h2 class=\"text-center\">Add New Book</h2>\n      <form [formGroup]=\"addBookForm\" (submit)=\"onAdd()\">\n          <div class=\"mb-3\">\n              <label for=\"bookName\" class=\"form-label\">Book Name</label>\n              <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"bookName\"\n                  placeholder=\"Enter Book Name\"\n                  aria-describedby=\"bookNameHelp\"\n                  formControlName=\"bookName\"\n              />\n              <span *ngIf=\"addBookForm.controls[''].dirty && carForm.hasError('required','model')\" style=\"color: red;\">Model Field is required</span>\n          </div>\n          \n          <div class=\"mb-3\">\n              <label for=\"author\" class=\"form-label\">Book Author</label>\n              <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"author\"\n                  placeholder=\"Enter Book Author\"\n                  aria-describedby=\"authorHelp\"\n                  formControlName=\"author\"\n              />\n          </div>\n          <div class=\"mb-3\">\n              <label for=\"genre\" class=\"form-label\">Book Genre</label>\n              <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"genre\"\n                  placeholder=\"Enter Book Genre\"\n                  aria-describedby=\"genreHelp\"\n                  formControlName=\"genre\"\n              />\n          </div>\n          <div class=\"mb-3\">\n              <label for=\"description\" class=\"form-label\">Book Description</label>\n              <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"description\"\n                  placeholder=\"Enter Book Description\"\n                  aria-describedby=\"descriptionHelp\"\n                  formControlName=\"description\"\n              />\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"rating\" class=\"form-label\">Rate the Book</label>\n            \n            <ngb-rating formControlName=\"rating\" [max]=\"5\" class=\"form-control\" id=\"custom-rating\"></ngb-rating>\n        </div>\n          <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n      </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}