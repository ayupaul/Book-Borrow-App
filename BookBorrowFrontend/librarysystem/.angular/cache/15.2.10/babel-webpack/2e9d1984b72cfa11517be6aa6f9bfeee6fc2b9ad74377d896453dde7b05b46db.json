{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ViewDetailsComponent = class ViewDetailsComponent {\n  constructor(bookService, router, userService, route, userStoreService) {\n    this.bookService = bookService;\n    this.router = router;\n    this.userService = userService;\n    this.route = route;\n    this.userStoreService = userStoreService;\n    this.router.params.subscribe(params => {\n      this.bookId = params['id'];\n    });\n  }\n  ngOnInit() {\n    this.bookService.getBookById(this.bookId).subscribe(res => {\n      console.log(res);\n      this.book = res;\n      this.currentRating = this.book.rating;\n      this.bookService.getLentedUserId(this.book.bookId).subscribe(reso => {\n        this.lentByUserId = reso;\n        console.log(reso);\n        this.userService.getUserById(this.lentByUserId).subscribe(resp => {\n          console.log(resp.name);\n          this.lenderName = resp.name;\n          const id = this.userService.getUserIdFromToken();\n          console.log(resp);\n        }, error => {\n          console.log(error);\n        });\n      }, error => {\n        console.log(error);\n      });\n      this.userId = this.userService.getUserIdFromToken();\n    }, error => {\n      console.log(error);\n    });\n  }\n  borrow(bookId) {\n    const userId = this.userService.getUserIdFromToken();\n    if (userId !== this.lentByUserId) {\n      this.bookService.borrowBook(bookId, userId).subscribe(res => {\n        this.route.navigateByUrl(\"/borrowedBooks\");\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n};\nViewDetailsComponent = __decorate([Component({\n  selector: 'app-view-details',\n  templateUrl: './view-details.component.html',\n  styleUrls: ['./view-details.component.css']\n})], ViewDetailsComponent);\nexport { ViewDetailsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAW1C,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAO/BC,YAAoBC,WAAuB,EAASC,MAAqB,EAASC,WAAuB,EAASC,KAAY,EAASC,gBAAiC;IAApJ,gBAAW,GAAXJ,WAAW;IAAqB,WAAM,GAANC,MAAM;IAAwB,gBAAW,GAAXC,WAAW;IAAqB,UAAK,GAALC,KAAK;IAAgB,qBAAgB,GAAhBC,gBAAgB;IACrJ,IAAI,CAACH,MAAM,CAACI,MAAM,CAACC,SAAS,CAAED,MAAM,IAAG;MACrC,IAAI,CAACE,MAAM,GAACF,MAAM,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC;EACJ;EACAG,QAAQ;IACN,IAAI,CAACR,WAAW,CAACS,WAAW,CAAC,IAAI,CAACF,MAAM,CAAC,CAACD,SAAS,CAAEI,GAAG,IAAG;MACzDC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACG,IAAI,GAACH,GAAG;MACb,IAAI,CAACI,aAAa,GAAC,IAAI,CAACD,IAAI,CAACE,MAAM;MACnC,IAAI,CAACf,WAAW,CAACgB,eAAe,CAAC,IAAI,CAACH,IAAI,CAACN,MAAM,CAAC,CAACD,SAAS,CAAEW,IAAI,IAAG;QACnE,IAAI,CAACC,YAAY,GAACD,IAAI;QACtBN,OAAO,CAACC,GAAG,CAACK,IAAI,CAAC;QACjB,IAAI,CAACf,WAAW,CAACiB,WAAW,CAAC,IAAI,CAACD,YAAY,CAAC,CAACZ,SAAS,CAAEc,IAAI,IAAG;UAChET,OAAO,CAACC,GAAG,CAACQ,IAAI,CAACC,IAAI,CAAC;UACtB,IAAI,CAACC,UAAU,GAACF,IAAI,CAACC,IAAI;UACzB,MAAME,EAAE,GAAC,IAAI,CAACrB,WAAW,CAACsB,kBAAkB,EAAE;UAE9Cb,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC;QACnB,CAAC,EAAEK,KAAK,IAAG;UACTd,OAAO,CAACC,GAAG,CAACa,KAAK,CAAC;QACpB,CAAC,CAAC;MACJ,CAAC,EAAEA,KAAK,IAAG;QACTd,OAAO,CAACC,GAAG,CAACa,KAAK,CAAC;MACpB,CAAC,CAAC;MAEF,IAAI,CAACC,MAAM,GAAC,IAAI,CAACxB,WAAW,CAACsB,kBAAkB,EAAE;IAEnD,CAAC,EAAEC,KAAK,IAAG;MACTd,OAAO,CAACC,GAAG,CAACa,KAAK,CAAC;IACpB,CAAC,CAAC;EAEJ;EACAE,MAAM,CAACpB,MAAU;IACf,MAAMmB,MAAM,GAAC,IAAI,CAACxB,WAAW,CAACsB,kBAAkB,EAAE;IAClD,IAAGE,MAAM,KAAG,IAAI,CAACR,YAAY,EAAC;MAC9B,IAAI,CAAClB,WAAW,CAAC4B,UAAU,CAACrB,MAAM,EAACmB,MAAM,CAAC,CAACpB,SAAS,CAAEI,GAAG,IAAG;QAC1D,IAAI,CAACP,KAAK,CAAC0B,aAAa,CAAC,gBAAgB,CAAC;MAE5C,CAAC,EAAEJ,KAAK,IAAG;QACTd,OAAO,CAACC,GAAG,CAACa,KAAK,CAAC;MACpB,CAAC,CAAC;;EAEJ;CACD;AAnDY3B,oBAAoB,eALhCD,SAAS,CAAC;EACTiC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWlC,oBAAoB,CAmDhC;SAnDYA,oBAAoB","names":["Component","ViewDetailsComponent","constructor","bookService","router","userService","route","userStoreService","params","subscribe","bookId","ngOnInit","getBookById","res","console","log","book","currentRating","rating","getLentedUserId","reso","lentByUserId","getUserById","resp","name","lenderName","id","getUserIdFromToken","error","userId","borrow","borrowBook","navigateByUrl","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Dotnet-Mini-Assignment2\\BookBorrowFrontend\\librarysystem\\src\\app\\components\\view-details\\view-details.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BookService } from 'src/app/services/book.service';\nimport { UserStoreService } from 'src/app/services/user-store.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-view-details',\n  templateUrl: './view-details.component.html',\n  styleUrls: ['./view-details.component.css']\n})\nexport class ViewDetailsComponent implements OnInit {\n  book:any\n  bookId:any\n  lentByUserId:any\n  lenderName:any\n  userId:any\n  currentRating:any\n  constructor(private bookService:BookService,private router:ActivatedRoute,private userService:UserService,private route:Router,private userStoreService:UserStoreService){\n    this.router.params.subscribe((params)=>{\n      this.bookId=params['id'];\n    })\n  }\n  ngOnInit(): void {\n    this.bookService.getBookById(this.bookId).subscribe((res)=>{\n      console.log(res);\n      this.book=res;\n      this.currentRating=this.book.rating;\n      this.bookService.getLentedUserId(this.book.bookId).subscribe((reso)=>{\n        this.lentByUserId=reso;\n        console.log(reso);\n        this.userService.getUserById(this.lentByUserId).subscribe((resp)=>{\n          console.log(resp.name);\n          this.lenderName=resp.name;\n          const id=this.userService.getUserIdFromToken();\n          \n          console.log(resp);\n        },(error)=>{\n          console.log(error);\n        })\n      },(error)=>{\n        console.log(error);\n      })\n    \n      this.userId=this.userService.getUserIdFromToken();\n      \n    },(error)=>{\n      console.log(error);\n    })\n   \n  }\n  borrow(bookId:any){\n    const userId=this.userService.getUserIdFromToken();\n    if(userId!==this.lentByUserId){\n    this.bookService.borrowBook(bookId,userId).subscribe((res)=>{\n      this.route.navigateByUrl(\"/borrowedBooks\");\n    \n    },(error)=>{\n      console.log(error);\n    })\n  }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}