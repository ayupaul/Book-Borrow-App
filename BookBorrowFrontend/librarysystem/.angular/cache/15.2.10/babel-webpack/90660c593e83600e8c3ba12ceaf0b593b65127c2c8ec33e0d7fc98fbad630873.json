{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user-store.service\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"src/app/services/book.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction DashboardComponent_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_tr_8_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const book_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.viewDetails(book_r1.bookId));\n    });\n    i0.ɵɵtext(5, \"View Details\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const book_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r1.bookName);\n  }\n}\nexport class DashboardComponent {\n  constructor(userStoreService, userService, bookService, route) {\n    this.userStoreService = userStoreService;\n    this.userService = userService;\n    this.bookService = bookService;\n    this.route = route;\n  }\n  ngOnInit() {\n    const username = this.userService.getUsernameFromToken();\n    this.userId = this.userService.getUserIdFromToken();\n    this.userStoreService.setData(username);\n    this.bookService.getAvailableBooks().subscribe(res => {\n      console.log(res.$values);\n      this.availableBooks = res.$values;\n    }, error => {\n      console.log(error);\n    });\n    this.userService.getAvailableToken(this.userId).subscribe(res => {\n      this.availableToken = res;\n      this.userStoreService.setDashboardToken(av);\n    });\n  }\n  viewDetails(id) {\n    this.route.navigate([\"viewDetails\", id]);\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.UserStoreService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.BookService), i0.ɵɵdirectiveInject(i4.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 9,\n    vars: 1,\n    consts: [[1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\")(3, \"th\");\n        i0.ɵɵtext(4, \"Available Books\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"th\");\n        i0.ɵɵtext(6, \"Action\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"tbody\");\n        i0.ɵɵtemplate(8, DashboardComponent_tr_8_Template, 6, 1, \"tr\", 1);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.availableBooks);\n      }\n    },\n    dependencies: [i5.NgForOf],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;;;IAQMA,0BAAwC;IAClCA,YAAmB;IAAAA,iBAAK;IAE5BA,0BAAI;IAAgCA;MAAA;MAAA;MAAA;MAAA,OAASA,iDAAwB;IAAA,EAAC;IAACA,4BAAY;IAAAA,iBAAS;;;;IAFxFA,eAAmB;IAAnBA,sCAAmB;;;ACE/B,OAAM,MAAOC,kBAAkB;EAI7BC,YAAoBC,gBAAiC,EAASC,WAAuB,EAASC,WAAuB,EAASC,KAAY;IAAtH,qBAAgB,GAAhBH,gBAAgB;IAA0B,gBAAW,GAAXC,WAAW;IAAqB,gBAAW,GAAXC,WAAW;IAAqB,UAAK,GAALC,KAAK;EAAS;EAC5IC,QAAQ;IACN,MAAMC,QAAQ,GAAC,IAAI,CAACJ,WAAW,CAACK,oBAAoB,EAAE;IACtD,IAAI,CAACC,MAAM,GAAC,IAAI,CAACN,WAAW,CAACO,kBAAkB,EAAE;IACjD,IAAI,CAACR,gBAAgB,CAACS,OAAO,CAACJ,QAAQ,CAAC;IACvC,IAAI,CAACH,WAAW,CAACQ,iBAAiB,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;MACpDC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;MACxB,IAAI,CAACC,cAAc,GAACJ,GAAG,CAACG,OAAO;IACjC,CAAC,EAAEE,KAAK,IAAG;MACTJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACpB,CAAC,CAAC;IACF,IAAI,CAAChB,WAAW,CAACiB,iBAAiB,CAAC,IAAI,CAACX,MAAM,CAAC,CAACI,SAAS,CAAEC,GAAG,IAAG;MAC/D,IAAI,CAACO,cAAc,GAACP,GAAG;MACvB,IAAI,CAACZ,gBAAgB,CAACoB,iBAAiB,CAACC,EAAE,CAAC;IAC7C,CAAC,CAAC;EACJ;EACAC,WAAW,CAACC,EAAM;IAChB,IAAI,CAACpB,KAAK,CAACqB,QAAQ,CAAC,CAAC,aAAa,EAACD,EAAE,CAAC,CAAC;EACzC;EAAC;qBAtBUzB,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAA2B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDX/BhC,gCAAmC;QAGvBA,+BAAe;QAAAA,iBAAK;QACxBA,0BAAI;QAAAA,sBAAM;QAAAA,iBAAK;QAGnBA,6BAAO;QACLA,iEAKK;QACPA,iBAAQ;;;QANeA,eAAiB;QAAjBA,4CAAiB","names":["i0","DashboardComponent","constructor","userStoreService","userService","bookService","route","ngOnInit","username","getUsernameFromToken","userId","getUserIdFromToken","setData","getAvailableBooks","subscribe","res","console","log","$values","availableBooks","error","getAvailableToken","availableToken","setDashboardToken","av","viewDetails","id","navigate","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Dotnet-Mini-Assignment2\\BookBorrowFrontend\\librarysystem\\src\\app\\components\\dashboard\\dashboard.component.html","C:\\Users\\ayushpal\\Dotnet-Mini-Assignment2\\BookBorrowFrontend\\librarysystem\\src\\app\\components\\dashboard\\dashboard.component.ts"],"sourcesContent":["<table class=\"table table-striped\">\n    <thead>\n      <tr>\n        <th>Available Books</th>\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let book of availableBooks\">\n        <td>{{ book.bookName }}</td>\n        \n        <td><button class=\"btn btn-primary\" (click)=\"viewDetails(book.bookId)\">View Details</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookService } from 'src/app/services/book.service';\nimport { UserStoreService } from 'src/app/services/user-store.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  availableBooks:any\n  userId:any\n  availableToken:any\n  constructor(private userStoreService:UserStoreService,private userService:UserService,private bookService:BookService,private route:Router){}\n  ngOnInit(): void {\n    const username=this.userService.getUsernameFromToken();\n    this.userId=this.userService.getUserIdFromToken();\n    this.userStoreService.setData(username);\n    this.bookService.getAvailableBooks().subscribe((res)=>{\n      console.log(res.$values);\n      this.availableBooks=res.$values;\n    },(error)=>{\n      console.log(error);\n    })\n    this.userService.getAvailableToken(this.userId).subscribe((res)=>{\n      this.availableToken=res;\n      this.userStoreService.setDashboardToken(av)\n    })\n  }\n  viewDetails(id:any){\n    this.route.navigate([\"viewDetails\",id]);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}