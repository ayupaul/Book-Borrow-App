{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user.service\";\nimport * as i2 from \"@angular/router\";\nexport class ActionGuard {\n  constructor(userService, route) {\n    this.userService = userService;\n    this.route = route;\n  }\n  canActivate() {\n    if (this.userService.isLoggedIn() === true) {\n      return true;\n    } else {\n      this.route.navigateByUrl(\"\");\n      return false;\n    }\n  }\n  static #_ = this.ɵfac = function ActionGuard_Factory(t) {\n    return new (t || ActionGuard)(i0.ɵɵinject(i1.UserService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ActionGuard,\n    factory: ActionGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,WAAuB,EAASC,KAAY;IAA5C,gBAAW,GAAXD,WAAW;IAAqB,UAAK,GAALC,KAAK;EAAS;EAClEC,WAAW;IACT,IAAI,IAAI,CAACF,WAAW,CAACG,UAAU,EAAE,KAAG,IAAI,EAAE;MACxC,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACF,KAAK,CAACG,aAAa,CAAC,EAAE,CAAC;MAC5B,OAAO,KAAK;;EAEhB;EAAC;qBATUN,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAO,SAAXP,WAAW;IAAAQ,YAFV;EAAM","names":["ActionGuard","constructor","userService","route","canActivate","isLoggedIn","navigateByUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Dotnet-Mini-Assignment2\\BookBorrowFrontend\\librarysystem\\src\\app\\guards\\action.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionGuard implements CanActivate {\n  constructor(private userService:UserService,private route:Router){}\n  canActivate(): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.userService.isLoggedIn()===true) {\n      return true;\n    } else {\n      this.route.navigateByUrl(\"\");\n      return false;\n    }\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}