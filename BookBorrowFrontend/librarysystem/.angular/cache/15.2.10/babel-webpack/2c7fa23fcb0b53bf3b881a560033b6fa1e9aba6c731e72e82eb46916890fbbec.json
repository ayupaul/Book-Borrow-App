{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookService {\n  constructor(http) {\n    this.http = http;\n    this.Backend = \"http://localhost:5030/api/Book\";\n  }\n  //add book\n  addBook(bookDetails) {\n    return this.http.post(`${this.Backend}/addBook`, bookDetails);\n  }\n  //get available books\n  getAvailableBooks() {\n    return this.http.get(`${this.Backend}/getAvaiableBooks`);\n  }\n  //get book by id\n  getBookById(id) {\n    return this.http.get(`${this.Backend}/getBookById/${id}`);\n  }\n  //borrow book\n  borrowBook(bookId, userId) {\n    const payload = {\n      userId: userId\n    };\n    return this.http.post(`${this.Backend}/borrow/${bookId}`, payload);\n  }\n  //get book borrowed by user\n  getBorrowedBooks(userId) {\n    return this.http.get(`${this.Backend}/getBookBorrowed/${userId}`);\n  }\n  //get book lent by user\n  getLentBooks(userId) {\n    return this.http.get(`${this.Backend}/getBookLent/${userId}`);\n  }\n  static #_ = this.ɵfac = function BookService_Factory(t) {\n    return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BookService,\n    factory: BookService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IADxB,YAAO,GAAQ,gCAAgC;EACR;EAEvC;EACAC,OAAO,CAACC,WAAe;IACrB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,UAAU,EAACF,WAAW,CAAC;EAC9D;EAEA;EACAG,iBAAiB;IACf,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACF,OAAO,mBAAmB,CAAC;EAC1D;EAEA;EACAG,WAAW,CAACC,EAAM;IAChB,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACF,OAAO,gBAAgBI,EAAE,EAAE,CAAC;EAC3D;EACA;EACAC,UAAU,CAACC,MAAU,EAACC,MAAU;IAC9B,MAAMC,OAAO,GAAG;MAAED,MAAM,EAAEA;IAAM,CAAE;IAClC,OAAO,IAAI,CAACX,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,WAAWM,MAAM,EAAE,EAACE,OAAO,CAAC;EACnE;EACA;EACAC,gBAAgB,CAACF,MAAU;IACzB,OAAO,IAAI,CAACX,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACF,OAAO,oBAAoBO,MAAM,EAAE,CAAC;EACnE;EACA;EACAG,YAAY,CAACH,MAAU;IACrB,OAAO,IAAI,CAACX,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACF,OAAO,gBAAgBO,MAAM,EAAE,CAAC;EAC/D;EAAC;qBA9BUb,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAiB,SAAXjB,WAAW;IAAAkB,YAFV;EAAM","names":["BookService","constructor","http","addBook","bookDetails","post","Backend","getAvailableBooks","get","getBookById","id","borrowBook","bookId","userId","payload","getBorrowedBooks","getLentBooks","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Dotnet-Mini-Assignment2\\BookBorrowFrontend\\librarysystem\\src\\app\\services\\book.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n  Backend:string=\"http://localhost:5030/api/Book\"\n  constructor(private http:HttpClient) { }\n\n  //add book\n  addBook(bookDetails:any):Observable<any>{\n    return this.http.post(`${this.Backend}/addBook`,bookDetails);\n  }\n\n  //get available books\n  getAvailableBooks():Observable<any>{\n    return this.http.get(`${this.Backend}/getAvaiableBooks`);\n  }\n\n  //get book by id\n  getBookById(id:any):Observable<any>{\n    return this.http.get(`${this.Backend}/getBookById/${id}`);\n  }\n  //borrow book\n  borrowBook(bookId:any,userId:any):Observable<any>{\n    const payload = { userId: userId }; \n    return this.http.post(`${this.Backend}/borrow/${bookId}`,payload);\n  }\n  //get book borrowed by user\n  getBorrowedBooks(userId:any):Observable<any>{\n    return this.http.get(`${this.Backend}/getBookBorrowed/${userId}`);\n  }\n  //get book lent by user\n  getLentBooks(userId:any):Observable<any>{\n    return this.http.get(`${this.Backend}/getBookLent/${userId}`);\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}