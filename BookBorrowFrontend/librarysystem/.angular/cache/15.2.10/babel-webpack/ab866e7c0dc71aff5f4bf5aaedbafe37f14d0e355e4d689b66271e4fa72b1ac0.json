{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user-store.service\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"src/app/services/book.service\";\nexport class DashboardComponent {\n  constructor(userStoreService, userService, bookService) {\n    this.userStoreService = userStoreService;\n    this.userService = userService;\n    this.bookService = bookService;\n  }\n  ngOnInit() {\n    const username = this.userService.getUsernameFromToken();\n    this.userStoreService.setData(username);\n    this.bookService.getAvailableBooks().subscribe(res => {\n      console.log(res);\n    }, error => {\n      console.log(error);\n    });\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.UserStoreService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.BookService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 2,\n    vars: 0,\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"dashboard works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,gBAAiC,EAASC,WAAuB,EAASC,WAAuB;IAAjG,qBAAgB,GAAhBF,gBAAgB;IAA0B,gBAAW,GAAXC,WAAW;IAAqB,gBAAW,GAAXC,WAAW;EAAc;EACvHC,QAAQ;IACN,MAAMC,QAAQ,GAAC,IAAI,CAACH,WAAW,CAACI,oBAAoB,EAAE;IACtD,IAAI,CAACL,gBAAgB,CAACM,OAAO,CAACF,QAAQ,CAAC;IACvC,IAAI,CAACF,WAAW,CAACK,iBAAiB,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;MACpDC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,EAAEG,KAAK,IAAG;MACTF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ;EAAC;qBAXUd,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAAe;IAAAC;IAAAC;IAAAC;MAAA;QCV/BC,yBAAG;QAAAA,gCAAgB;QAAAA,iBAAI","names":["DashboardComponent","constructor","userStoreService","userService","bookService","ngOnInit","username","getUsernameFromToken","setData","getAvailableBooks","subscribe","res","console","log","error","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\ayushpal\\Dotnet-Mini-Assignment2\\BookBorrowFrontend\\librarysystem\\src\\app\\components\\dashboard\\dashboard.component.ts","C:\\Users\\ayushpal\\Dotnet-Mini-Assignment2\\BookBorrowFrontend\\librarysystem\\src\\app\\components\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BookService } from 'src/app/services/book.service';\nimport { UserStoreService } from 'src/app/services/user-store.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  availableBooks:any\n  constructor(private userStoreService:UserStoreService,private userService:UserService,private bookService:BookService){}\n  ngOnInit(): void {\n    const username=this.userService.getUsernameFromToken();\n    this.userStoreService.setData(username);\n    this.bookService.getAvailableBooks().subscribe((res)=>{\n      console.log(res);\n    },(error)=>{\n      console.log(error);\n    })\n  }\n}\n","<p>dashboard works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}